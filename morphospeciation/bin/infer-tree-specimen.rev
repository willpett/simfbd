taxa <- readTaxonData("taxa.sa.tsv")
tree <- readTrees("tree.sa.tre")[1]

for(i in 1:taxa.size())
{
    if(taxa[i].getAge() > 0.0)
    {
         taxa[i] <- taxon(taxa[i].getName(),age=tree.nodeAge(tree.tipIndex(taxa[i])))
    }
}

mvi = 1

source("../../prior.rev")

origin_time <- tree.rootAge() + tree.branchLength(tree.nnodes())
print("simulate")
fbd_tree ~ dnFBDP(origin=origin_time, lambda=lambda, mu=mu, psi=psi, rho=1.0, taxa=taxa)
print("set value")
fbd_tree.setValue(tree)

mymodel = model(fbd_tree)

mni = 1

# Create a vector of monitors #
monitors[mni++] = mnModel(filename="rb.log", printgen=10)

# Initialize the MCMC object #
mymcmc = mcmc(mymodel, monitors, moves, moveschedule="random")

# Run the MCMC #
mymcmc.run(generations=10000)

# Quit RevBayes #
q()
